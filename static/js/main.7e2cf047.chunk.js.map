{"version":3,"sources":["assets/images/wikipedia.svg","assets/images/reddit-color.svg","assets/images/audit-report-survey.svg","assets/images/computer-laptop.svg","assets/images/falconHren.png","assets/images/starshipren2.png","assets/images/falcon9ren.png","components/navbar.js","components/landingpage.js","components/latestlaunch.js","components/vehicle_falconheavy.js","components/vehicle_starship.js","components/previous.js","components/launch.js","components/vehicle_falcon9.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","LandingPage","useState","setError","setIsLoaded","nextLaunch","setNextLaunch","launchPad","setLaunchPad","useEffect","a","url2","fetch","response","response2","json","data","data2","fetchNextLaunch","name","flight_number","map","launchP","index","id","launchpad","key","Date","date_utc","toDateString","details","LatestLaunch","error","isLoaded","launch","setLaunch","rockets","setRockets","url3","response3","data3","fetchSpaceX","message","success","rocketID","rocket","full_name","href","links","wikipedia","target","rel","src","wikipediaLink","alt","presskit","presskitLink","reddit","redditLink","article","articleLink","url","webcast","controls","width","height","flickr","original","gallery","CircularProgress","color","VehicleFalconHeavy","setRocket","toggleStatus","setToggleStatus","description","onClick","first_stage","engines","thrust_sea_level","kN","toLocaleString","thrust_vacuum","burn_time_sec","second_stage","thrust","falconHeavyImage","meters","diameter","mass","kg","payload_weights","payload","stages","VehicleStarship","starshipImage","PreviousLaunch","prevLaunch","setPrevLaunch","reverse","prev","toLocaleDateString","patch","small","LaunchDetails","match","useParams","params","console","log","VehicleFalcon9","falconImage","App","path","component","Launch","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7e2cf047.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wikipedia.245a5c76.svg\";","module.exports = __webpack_public_path__ + \"static/media/reddit-color.7829c0b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/audit-report-survey.ebd973a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/computer-laptop.32104caa.svg\";","module.exports = __webpack_public_path__ + \"static/media/falconHren.2ad3bb38.png\";","module.exports = __webpack_public_path__ + \"static/media/starshipren2.98f9fd8d.png\";","module.exports = __webpack_public_path__ + \"static/media/falcon9ren.76818ec5.png\";","import React from 'react';\nimport  {BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport '../App.css'\n\nexport default function Navbar() {\n    return (\n        <div className=\"navigation-container\">\n            <div className=\"navigation-container-inner\">\n                <ul className=\"navigation__menu\">\n                    <li className=\"navigation__options\">\n                        <Link to=\"/\" className=\"navigation__options\">HOME</Link>\n                    </li>\n                    <li className=\"navigation__options\">\n                        <Link to=\"/missions\" className=\"navigation__options\">MISSIONS</Link>\n                    </li>\n                    <li className=\"navigation__options\">\n                        <Link to='/rocket/falcon9' className=\"navigation__options\">FALCON 9 </Link>\n                    </li>\n                    <li className=\"navigation__options\">\n                        <Link to='/rocket/falconheavy' className=\"navigation__options\">FALCON HEAVY</Link>\n                    </li>\n                    <li className=\"navigation__options\">\n                        <Link to='/rocket/starship' className=\"navigation__options\">STARSHIP </Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\n\nimport \"../App.css\";\n\nexport default function LandingPage() {\n\tconst [error, setError] = useState(null);\n\tconst [isLoaded, setIsLoaded] = useState(false);\n\tconst [nextLaunch, setNextLaunch] = useState([]);\n\tconst [launchPad, setLaunchPad] = useState([]);\n\n\tuseEffect(() => {\n\t\tfetchNextLaunch();\n\t\tasync function fetchNextLaunch() {\n\t\t\ttry {\n\t\t\t\tconst url = \"https://api.spacexdata.com/v4/launches/next?limit=2\"\n\t\t\t\tconst url2 = \"https://api.spacexdata.com/v4/launchpads\"\n\t\t\t\tconst response = await fetch(url);\n\t\t\t\tconst response2 = await fetch(url2);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tconst data2 = await response2.json();\n\t\t\t\tsetNextLaunch(data);\n\t\t\t\tsetLaunchPad(data2);\n\t\t\t\tsetIsLoaded(true);\n\t\t\t} catch (error) {\n\t\t\t\tsetIsLoaded(false);\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t}\n\t}, []);\n\treturn (\n\t\t<div className=\"landing-container\">\n\t\t\t<div>\n\t\t\t\t<div className=\"landing-separator\">\n\t\t\t\t<div className=\"mission--next mission-container\">\n\t\t\t\t\t<div className=\"next-header upcoming-header\">\n\t\t\t\t\t\t<h3 className=\"upcoming--launch upcoming--details\">UPCOMING MISSION</h3>\n\t\t\t\t\t\t<h2 className=\"launch--recap upcoming--launch__name upcoming--details\">{nextLaunch.name}</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"next-header next-mission mission-container line--format\">\n\t\t\t\t\t<div className=\"flight-mission\">\n\t\t\t\t\t\t<h3 className=\"upcoming--launch upcoming--flightnum upcoming--details\">FLIGHT: #{nextLaunch.flight_number}</h3>\n\t\t\t\t\t\t<div className=\"flight__site__realtime\">\n                                <div className=\"upcoming--details\">\n                                {launchPad.map((launchP, index) => {\n\t\t\t\t\t\t\t\t\tif(launchP.id === nextLaunch.launchpad) {\n                                        return <div key={index} className=\"upcoming--details\">\n                                                <h3 className=\"upcoming--details\">{launchP.name}</h3>\n                                                </div>\n                                        }\n                                    }\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h3 className=\"upcoming--launch upcoming--details\">{new Date (nextLaunch.date_utc).toDateString()}</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<span className=\"next-details\">{nextLaunch.details ? nextLaunch.details : 'No Mission Details' }</span>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport wikipediaLink from '../../src/assets/images/wikipedia.svg'\nimport redditLink from '../../src/assets/images/reddit-color.svg'\nimport presskitLink from '../../src/assets/images/audit-report-survey.svg'\nimport articleLink from '../../src/assets/images/computer-laptop.svg'\n\nimport '../App.css'\n\nimport ReactPlayer from 'react-player';\n\nexport default function LatestLaunch() {\n    const [error, setError] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [launch, setLaunch] = useState([]);\n    const [launchPad, setLaunchPad] = useState([]);\n    const [rockets, setRockets] = useState([]);\n\n    useEffect(() => {\n        fetchSpaceX();\n        async function fetchSpaceX() {\n            try {\n            const url = \"https://api.spacexdata.com/v4/launches/latest\"\n            const url2 = \"https://api.spacexdata.com/v4/launchpads\"\n            const url3 = \"https://api.spacexdata.com/v4/rockets\"\n                const response = await fetch(url);\n                const response2 = await fetch(url2);\n                const response3 = await fetch(url3);\n                const data = await response.json();\n                const data2 = await response2.json();\n                const data3 = await response3.json();\n                setLaunch(data);\n                setLaunchPad(data2);\n                setRockets(data3);\n                setIsLoaded(true);\n            } catch (error) {\n                setIsLoaded(false);\n                setError(error);\n            }\n        }\n    }, []);\n\n    if(error) {\n        return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n        return <div className=\"loading-progress\"> <CircularProgress color=\"secondary\" /></div>\n        } else {\n            return (\n            <div className=\"background\">\n            <div className=\"second-container\">\n                <div className=\"launch-container\">\n                    <div className=\"mission-details mission-container\">\n                        <h3 className=\"upcoming--details latest--header\">LATEST MISSION DETAILS</h3>\n                        <div className=\"latest-mission-container\">\n                            <div className=\"latest--format--line\">\n                                <div className=\"latest-launch-name\">\n                                    <h2 className=\"upcoming--launch__name latest--launch\"><span>{launch.name}</span></h2>\n                                </div>\n                            </div>\n                            <div>\n                                <h2 className=\"flight__number launch--recap\">{launch.flight_number} </h2>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"mission-description mission-container\">\n                        <div className=\"flight-details\">\n                            <div className=\"flight--section flight__success__realtime\">\n                                <p className=\"flight__format flight__success flight--header\">STATUS</p>\n                                <span className={launch.success ? 'status-success statusbar' : 'status-fail statusbar'}>{ (launch.success) ? ' SUCCESSFUL ' : ' FAILURE '}</span>\n                            </div>\n                            <div className=\"flight--section flight__date__realtime\">\n                                <p className=\"flight__format flight__date flight--header\"> DATE</p>\n                                <span className=\"flight__date flight__format next-details\">{new Date (launch.date_utc).toDateString()}</span>\n                            </div>\n                            <div className=\"flight--section flight__date__realtime\">\n                                <p className=\"flight__format flight__date flight--header\">ROCKET</p>\n                                <div>\n                                    {rockets.map((rocketID, index) => {\n                                        if(rocketID.id === launch.rocket) {\n                                            return <div key={index}>\n                                                <span className=\"flight__format next-details\">{rocketID.name}</span>\n                                                </div>\n                                        }\n                                    }\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"flight--kit\">\n                            <div className=\"flight--section flight__site__realtime\">\n                                <p className=\"flight__format flight__site flight--header\">LAUNCH SITE </p>\n                                <div className=\"flight__site\">\n                                {launchPad.map((launchP, index) => {\n                                    if(launchP.id === launch.launchpad) {\n                                        return <div key={index} className=\"flight__site\">\n                                                <span className=\"launch--site next-details\">{launchP.full_name}</span>\n                                                </div>\n                                        }\n                                    }\n                                )}\n                                </div>\n                            </div>\n                            <div className=\"mission-links\">\n                                <ul className=\"mission-navigate-extra\">\n                                    <li><a  href={launch.links.wikipedia} \n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        className=\"mission--details\">\n                                        <img src={wikipediaLink}\n                                            alt=\"wikipedia\"\n                                            className=\"link-images\"\n                                        />\n                                    </a></li>\n                                    <li><a  href={launch.links.presskit} \n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        alt=\"presskit\"\n                                        className=\"mission--details\">\n                                        <img src={presskitLink}\n                                            alt=\"press kit\"\n                                            className=\"link-images press-images\"\n                                        />\n                                    </a></li>\n                                    <li><a  href={launch.links.reddit.launch} \n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        alt=\"reddit-launch\"\n                                        className=\"mission--details\">\n                                        <img src={redditLink}\n                                            alt=\"reddit launch\"\n                                            className=\"link-images\"\n                                        />\n                                    </a></li>\n                                    <li><a  href={launch.links.article} \n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        alt=\"article\"\n                                        className=\"mission--details\">\n                                        <img src={articleLink}\n                                            alt=\"article\"\n                                            className=\"link-images\"\n                                        />\n                                    </a></li>\n                                </ul>\n                            </div>\n                        </div>\n                        <span className=\"line--format latest--line\"></span>\n                    </div>\n                        <div className=\"mission-container mission-debrief\">\n                            <p className=\"launch--details launch--format next-details\"> {launch.details} </p>\n                        </div>\n                    <div className=\"mission-container player-wrapper\">\n                        <h3 className=\"upcoming--details latest--header mission--replay\">MISSION REPLAY</h3>\n                        <div className=\"launch-container react-player\">\n                            <ReactPlayer \n                                url={launch.links.webcast} \n                                controls \n                                width='100vh' \n                                height='60vh'\n                            />\n                        </div>\n                    </div>\n                    <div className=\"mission-container\">\n                        <div className=\"gallery-container\">\n                            {launch.links.flickr.original.map((gallery,index)=>\n                                <a key={index} href={gallery} target=\"_blank\" rel=\"noopener noreferrer\" className=\"image-link\">\n                                    <img\n                                        src={gallery}\n                                        alt={launch.flight_number}\n                                        className=\"flight-image\"\n                                    />\n                                </a>\n                            )}\n                        </div>\n                        <span className=\"underline\"><hr /></span>\n                    </div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\n\nimport '../App.css'\n\nimport falconHeavyImage from '../../src/assets/images/falconHren.png';\n\n\nexport default function VehicleFalconHeavy() {\n    const [error, setError] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [rocket, setRocket] = useState([]);\n    const [toggleStatus, setToggleStatus] = useState(0);\n\n    useEffect(() => {\n        fetchSpaceX();\n        async function fetchSpaceX() {\n            try {\n            const url = \"https://api.spacexdata.com/v3/rockets/falconheavy\";\n                const response = await fetch(url);\n                const data = await response.json();\n                setRocket(data);\n                setIsLoaded(true);\n            } catch (error) {\n                setIsLoaded(false);\n                setError(error);\n            }\n        }\n    }, []);\n    if(error) {\n        return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n        return <div className=\"loading-progress\"> <CircularProgress color=\"secondary\" /></div>\n        } else {\n            return (\n            <div className=\"background-rocket\">\n                <div className=\"falconH-background rocket-background\">\n                    <div className=\"container-header-title\">\n                        <div className=\"container-inner\">\n                            <h2 className=\"header-inner vehicle--header\">FALCON HEAVY</h2>\n                        </div>\n                    </div>\n                    <div className=\"arrow-down\"></div>\n                </div>\n                <div className=\"background-rocket-bottom\">\n                    <div className=\"rocket-container\">\n                        <div className=\"rocket-containerL\">\n                            <div className=\"rocket-overview\">\n                                <h2 className=\"overview--header\">OVERVIEW</h2>\n                                <div className=\"rocket-overview-format\">\n                                    <p className=\"rocket--text next-details\">{rocket.description}</p>\n                                </div>\n                                <div className=\"shadow-button\">\n                                    <a href={rocket.wikipedia}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            className=\"button-format\">\n                                        <button className=\"read-button hover-filled-opacity\">\n                                            <span>Read More</span>\n                                        </button>\n                                    </a>\n                                </div>\n                            </div>\n                            <div className=\"rocket-containerL-lower\">\n                                <div className=\"rocket-containerL-first_stage\">\n                                    <div className=\"rocket-header\">\n                                        <h3 onClick={() => setToggleStatus(0)} className={toggleStatus ? \"additional-overview\" : \"highlight additional-overview\"}>FIRST STAGE</h3>\n                                            <span className=\"seperator\">|</span>\n                                        <h3 onClick={() => setToggleStatus(1)} className={toggleStatus ? \"highlight additional-overview\" : \"additional-overview\"}>SECOND STAGE</h3>\n                                    </div>\n                                    {toggleStatus === 0 && \n                                    <div className=\"rocket-stages\">\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description rocket--engine\">ENGINES</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.first_stage.engines}</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">THRUST AT <span className=\"rocket--payload\">SEA LEVEL</span></p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{(rocket.first_stage.thrust_sea_level.kN).toLocaleString()}</span> <span>&nbsp;kN</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">THRUST IN <span className=\"rocket--payload\">VACUUM</span></p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{(rocket.first_stage.thrust_vacuum.kN).toLocaleString()}</span> <span>&nbsp;kN</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">BURN TIME</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.first_stage.burn_time_sec} </span> <span>&nbsp;sec</span></p>\n                                        </div>\n                                    </div>}\n                                    {toggleStatus === 1 && \n                                    <div className=\"rocket-stages\">\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">ENGINES</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.second_stage.engines}</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">THRUST</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{(rocket.second_stage.thrust.kN).toLocaleString()}</span> <span>&nbsp;kN</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">BURN TIME</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.second_stage.burn_time_sec} </span> <span>&nbsp;sec</span></p>\n                                        </div>\n                                    </div>}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"rocket-containerM\">\n                            <img src={falconHeavyImage}\n                                alt=\"falcon heavy rocket\"\n                                className=\"rocket-side-image\">\n                            </img>\n                        </div>\n                        <div className=\"rocket-containerR\">\n                            <div className=\"technical\">\n                                <h3 className='rocket--technical'>TECHNICAL DETAILS</h3>\n                            </div>\n                            <div className=\"overview-container\">\n                                <div className=\"rocket-stages\">\n                                    <div className=\"overview-table-right format-table-right\">\n                                        <p className=\"rocket--description\">HEIGHT</p>\n                                        <p className=\"rocket--classification\"> <span className=\"rocket--classification--met\">{rocket.height.meters}</span>&nbsp;<span>m</span></p>\n                                    </div>\n                                </div>\n                                <div className=\"overview-table-right\">\n                                    <div className=\"overview-table-right\">\n                                        <p className=\"rocket--description\">DIAMETER</p>\n                                        <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.diameter.meters}</span>&nbsp;<span>m</span></p>\n                                    </div>\n                                </div>                      \n                                <div className=\"overview-table-right\">\n                                    <div className=\"overview-table-right\">\n                                        <p className=\"rocket--description\">MASS</p>\n                                        <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{(rocket.mass.kg).toLocaleString()}</span>&nbsp;<span>kg</span></p>\n                                    </div>\n                                </div>\n                                <div className=\"overview-table-payload\">\n                                    <div className=\"overview-table-right\">\n                                    {rocket.payload_weights.map((payload,index)=>\n                                        <div key={payload.id} className=\"overview-table-payload\">\n                                            <ul className=\"overview-table overview-table-right\">\n                                                <span className=\"rocket--description\">PAYLOAD TO <span className=\"rocket--payload rocket--name\"> {payload.id}</span></span>\n                                                <li className=\"rocket--classification\"> <span className=\"rocket--classification--met\">{(payload.kg).toLocaleString()}</span> <span>&nbsp;kg</span></li>\n                                            </ul>\n                                        </div>\n                                    )}\n                                    </div>\n                                </div>\n                                <div className=\"overview-table-right\">\n                                    <div className=\"overview-table-right\">\n                                        <p className=\"rocket--description\">STAGES</p>\n                                        <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.stages}</span></p>\n                                    </div>\n                                </div>     \n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"rocket-container\">\n                        <div className=\"next-button-left\">\n                            <div className=\"read-button next-button\">\n                            <Link to={`/rocket/falcon9`}><span>Falcon 9</span></Link>\n                            </div>\n                        </div>\n                        <div className=\"rocket-containerM read-button next-button\">\n                            <Link to={`/rocket/falconheavy`}><span>Falcon Heavy</span></Link>\n                        </div>\n                        <div className=\"next-button-right\">\n                            <div className=\"read-button next-button\">\n                                <Link to={`/rocket/starship`}><span>Starship</span></Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\n\nimport '../App.css'\n\nimport starshipImage from '../../src/assets/images/starshipren2.png';\n\n\nexport default function VehicleStarship() {\n    const [error, setError] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [rocket, setRocket] = useState([]);\n    const [toggleStatus, setToggleStatus] = useState(0);\n\n    useEffect(() => {\n        fetchSpaceX();\n        async function fetchSpaceX() {\n            try {\n            const url = \"https://api.spacexdata.com/v3/rockets/starship\";\n                const response = await fetch(url);\n                const data = await response.json();\n                setRocket(data);\n                setIsLoaded(true);\n            } catch (error) {\n                setIsLoaded(false);\n                setError(error);\n            }\n        }\n    }, []);\n    if(error) {\n        return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n        return <div className=\"loading-progress\"> <CircularProgress color=\"secondary\" /></div>\n        } else {\n            return (\n            <div>\n                <div className=\"starship-background background-rocket\">\n                    <div className=\"container-header-title\">\n                        <div className=\"container-inner\">\n                            <h2 className=\"header-inner vehicle--header\">STARSHIP</h2>\n                        </div>\n                    </div>\n                    <div className=\"arrow-down\"></div>\n                </div>\n                <div className=\"background-rocket-bottom\">\n                    <div className=\"rocket-container\">\n                        <div className=\"rocket-containerL\">\n                            <div className=\"rocket-overview\">\n                                <h2 className=\"overview--header\">OVERVIEW</h2>\n                                <div className=\"rocket-overview-format\">\n                                    <p className=\"rocket--text next-details\">{rocket.description}</p>\n                                </div>\n                                <div className=\"shadow-button\">\n                                    <a href={rocket.wikipedia}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            className=\"button-format\">\n                                        <button className=\"read-button hover-filled-opacity\">\n                                            <span>Read More</span>\n                                        </button>\n                                    </a>\n                                </div>\n                            </div>\n                            <div className=\"rocket-containerL-lower\">\n                                <div className=\"rocket-containerL-first_stage\">\n                                    <div className=\"rocket-header\">\n                                        <h3 onClick={() => setToggleStatus(0)} className={toggleStatus ? \" additional-overview\" : \"highlight additional-overview\"}>FIRST STAGE</h3>\n                                            <span className=\"seperator\">|</span>\n                                        <h3 onClick={() => setToggleStatus(1)} className={toggleStatus ? \"highlight additional-overview\" : \"additional-overview\"}>SECOND STAGE</h3>\n                                    </div>\n                                    {toggleStatus === 0 && \n                                    <div className=\"rocket-stages\">\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">ENGINES</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.first_stage.engines}</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">THRUST AT <span className=\"rocket--payload\">SEA LEVEL</span></p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{(rocket.first_stage.thrust_sea_level.kN).toLocaleString()}</span> <span>&nbsp;kN</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">THRUST IN <span className=\"rocket--payload\">VACUUM</span></p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{(rocket.first_stage.thrust_vacuum.kN).toLocaleString()}</span> <span>&nbsp;kN</span></p>\n                                        </div>\n                                    </div>}\n                                    {toggleStatus === 1 && \n                                    <div className=\"rocket-stages\">\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description rocket--engine\">ENGINES</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.second_stage.engines}</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">THRUST</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{(rocket.second_stage.thrust.kN).toLocaleString()}</span> <span>&nbsp;kN</span></p>\n                                        </div>\n                                    </div>}\n                                </div>\n                            </div>\n\n                        </div>\n                        <div className=\"rocket-containerM\">\n                            <img src={starshipImage}\n                                alt=\"starship rocket\"\n                                className=\"rocket-side-image\">\n                            </img>\n                        </div>\n                        <div className=\"rocket-containerR\">\n                            <div className=\"technical\">\n                                <h3 className='rocket--technical'>TECHNICAL DETAILS</h3>\n                            </div>\n                            <div className=\"overview-container\">\n                                <div className=\"rocket-stages\">\n                                    <div className=\"overview-table-right format-table-right\">\n                                        <p className=\"rocket--description\">HEIGHT</p>\n                                        <p className=\"rocket--classification\"> <span className=\"rocket--classification--met\">{rocket.height.meters}</span>&nbsp;<span>m</span></p>\n                                    </div>\n                                </div>\n                                <div className=\"overview-table-right\">\n                                    <div className=\"overview-table-right\">\n                                        <p className=\"rocket--description\">DIAMETER</p>\n                                        <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.diameter.meters}</span>&nbsp;<span>m</span></p>\n                                    </div>\n                                </div>                      \n                                <div className=\"overview-table-right\">\n                                    <div className=\"overview-table-right\">\n                                        <p className=\"rocket--description\">MASS</p>\n                                        <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{(rocket.mass.kg).toLocaleString()}</span>&nbsp;<span>kg</span></p>\n                                    </div>\n                                </div>\n                                <div className=\"overview-table-payload\">\n                                    <div className=\"overview-table-right\">\n                                    {rocket.payload_weights.map((payload,index)=>\n                                        <div key={payload.id} className=\"overview-table-payload\">\n                                            <ul className=\"overview-table overview-table-right\">\n                                                <span className=\"rocket--description\">PAYLOAD TO <span className=\"rocket--payload rocket--name\"> {payload.id} </span></span>\n                                                <li className=\"rocket--classification\"> <span className=\"rocket--classification--met\">{(payload.kg).toLocaleString()}</span> <span>&nbsp;kg</span></li>\n                                            </ul>\n                                        </div>\n                                    )}\n                                    </div>\n                                </div>\n                                <div className=\"overview-table-right\">\n                                    <div className=\"overview-table-right\">\n                                        <p className=\"rocket--description\">STAGES</p>\n                                        <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.stages}</span></p>\n                                    </div>\n                                </div>     \n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"rocket-container\">\n                        <div className=\"next-button-left\">\n                            <div className=\"read-button next-button\">\n                            <Link to={`/rocket/falcon9`}><span>Falcon 9</span></Link>\n                            </div>\n                        </div>\n                        <div className=\"rocket-containerM read-button next-button\">\n                            <Link to={`/rocket/falconheavy`}><span>Falcon Heavy</span></Link>\n                        </div>\n                        <div className=\"next-button-right\">\n                            <div className=\"read-button next-button\">\n                                <Link to={`/rocket/starship`}><span>Starship</span></Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport  { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport '../App.css'\n\n\nexport default function PreviousLaunch() {\n    const [error, setError] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [prevLaunch, setPrevLaunch] = useState([]);\n    const [launchPad, setLaunchPad] = useState([]);\n    const [rockets, setRockets] = useState([]);\n \n    useEffect(() => {\n        fetchSpaceX();\n        async function fetchSpaceX() {\n            try {\n            const url = \"https://api.spacexdata.com/v4/launches/past\"            \n            const response = await fetch(url);\n            const data = await response.json();\n            setPrevLaunch(data.reverse())\n\n            const url2 = \"https://api.spacexdata.com/v4/launchpads\"\n            const response2 = await fetch(url2);\n            const data2 = await response2.json();\n            setLaunchPad(data2);\n\n            const url3 = \"https://api.spacexdata.com/v4/rockets\"\n            const response3 = await fetch(url3);\n            const data3 = await response3.json();\n            setRockets(data3);\n\n            setIsLoaded(true);\n            } catch (error) {\n                setIsLoaded(false);\n                setError(error);\n            }\n        }\n    }, []);\n\n    if(error) {\n        return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n        return <div className=\"loading-progress\"> <CircularProgress color=\"secondary\" /></div>\n        } else {\n            return (\n                <div>\n                    <div className=\"previous-background\">\n                        <div className=\"container-header-title\">\n                            <div className=\"container-inner\">\n                                <h2 className=\"header-inner\">MISSIONS</h2>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"launch-container\">\n                        <div className=\"mission-details mission-container\">\n                            <div className=\"previous-mission-container\">\n                                {prevLaunch.map((prev, index) =>\n                                    <div key={index} className=\"previous-launch-container\">\n                                        <div className=\"previous-upper-container\">\n                                            <div className=\"previous-launch-time\">\n                                                <span className=\"previous--format\">{new Date (prev.date_utc).toLocaleDateString()}</span>\n                                            </div>\n                                            <div className=\"previous-launch-launchpad\">\n                                                {launchPad.map((launchP, index) => {\n                                                    if(launchP.id === prev.launchpad) {\n                                                        return <div key={index}>\n                                                                <span className=\"previous--launchpad--type previous--format\">{launchP.name}</span>\n                                                                </div>\n                                                        }\n                                                    }\n                                                )}\n                                            </div>\n                                            <div className=\"previous-launch-rocket\">\n                                                {rockets.map((rocketID, index) => {\n                                                    if(rocketID.id === prev.rocket) {\n                                                        return <div key={index}>\n                                                                <span className=\"previous--rocket--type previous--format\">{rocketID.name}</span>\n                                                                </div>\n                                                        }\n                                                    }\n                                                )}\n                                            </div>\n                                            <div className=\"previous-launch-more\">\n                                                <Link to={`/launch/${prev.id}`} className=\"previous--more\">\n                                                    <span className=\"previous--format previous--more\">MORE DETAILS</span>\n                                                </Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"previous-lower-container\">\n                                            <div className=\"previous-launch-flightnumber\">\n                                                <span className=\"flight--number--format\"></span><span className=\"previous--format previous-flightnumber\">{prev.flight_number}</span>\n                                            </div>\n                                            <div className=\"previous-launch-mission-patch\">\n                                                <img src={prev.links.patch.small || null }\n                                                className=\"patch\"\n                                                alt={prev.flight_number + \" Mission Patch\"}\n                                                />\n                                            </div>\n                                            <div className=\"previous-right-container\">\n                                                <div className=\"previous-launch-name\">\n                                                    <div className=\"previous-launch-status\">\n\n                                                        <span className={prev.success ? 'status-success statusbar' : 'status-fail statusbar'}>{ (prev.success) ? ' SUCCESSFUL ' : ' FAILURE '}</span>\n                                                    </div>\n                                                    <span className=\"previous--format previous--name\">{prev.name}</span>\n                                                </div>\n                                                <div className=\"previous-launch-details\">\n                                                    <span className=\"previous--format previous--details\">{prev.details ? prev.details : 'No Mission Details'}</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div> \n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport wikipediaLink from '../../src/assets/images/wikipedia.svg'\nimport redditLink from '../../src/assets/images/reddit-color.svg'\nimport presskitLink from '../../src/assets/images/audit-report-survey.svg'\nimport articleLink from '../../src/assets/images/computer-laptop.svg'\n\nimport '../App.css'\n\nimport ReactPlayer from 'react-player';\nimport { useParams } from 'react-router-dom';\n\nexport default function LaunchDetails({match}) {\n    const [error, setError] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [launch, setLaunch] = useState([]);\n    const [launchPad, setLaunchPad] = useState([]);\n    const [rockets, setRockets] = useState([]);\n    const {id} = useParams();\n\n    useEffect(() => {\n        fetchSpaceX();\n        console.log('match', match);\n        console.log(id);\n        async function fetchSpaceX() {\n            try {\n            const url = `https://api.spacexdata.com/v4/launches/${match.params.id}`\n            const url2 = \"https://api.spacexdata.com/v4/launchpads\"\n            const url3 = \"https://api.spacexdata.com/v4/rockets\"\n            \n                const response = await fetch(url);\n                const data = await response.json();\n                setLaunch(data);\n\n                const response2 = await fetch(url2);\n                const data2 = await response2.json();\n                setLaunchPad(data2);\n\n                const response3 = await fetch(url3);\n                const data3 = await response3.json();\n                setRockets(data3);\n\n                setIsLoaded(true);\n            } catch (error) {\n                setIsLoaded(false);\n                setError(error);\n            }\n        }\n    }, []);\n\n    if(error) {\n        return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n        return <div className=\"loading-progress\"> <CircularProgress color=\"secondary\" /></div>\n        } else {\n            return (\n                <div>\n                    <div className=\"previous-background\">\n                        <div className=\"container-header-title\">\n                            <div className=\"container-inner\">\n                                <h2 className=\"header-inner\">MISSIONS</h2>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"second-container\">\n                        <div className=\"launch-container\">\n                            <div className=\"mission-details mission-container\">\n                                <h3 className=\"upcoming--details latest--header\">MISSION DETAILS</h3>\n                                <div className=\"latest-mission-container\">\n                                    <div className=\"latest--format--line\">\n                                        <div className=\"latest-launch-name\">\n                                            <h2 className=\"upcoming--launch__name latest--launch\"><span>{launch.name}</span></h2>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <h2 className=\"flight__number launch--recap\">{launch.flight_number} </h2>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"mission-description mission-container\">\n                                <div className=\"flight-details\">\n                                    <div className=\"flight--section flight__success__realtime\">\n                                        <p className=\"flight__format flight__success flight--header\">STATUS</p>\n                                        <span className={launch.success ? 'status-success statusbar' : 'status-fail statusbar'}>{ (launch.success) ? ' SUCCESSFUL ' : ' FAILURE '}</span>\n                                    </div>\n                                    <div className=\"flight--section flight__date__realtime\">\n                                        <p className=\"flight__format flight__date flight--header\"> DATE</p>\n                                        <span className=\"flight__date flight__format next-details\">{new Date (launch.date_utc).toDateString()}</span>\n                                    </div>\n                                    <div className=\"flight--section flight__date__realtime\">\n                                        <p className=\"flight__format flight__date flight--header\">ROCKET</p>\n                                        <div>\n                                            {rockets.map((rocketID, index) => {\n                                                if(rocketID.id === launch.rocket) {\n                                                    return <div key={index}>\n                                                        <span className=\"flight__format next-details\">{rocketID.name}</span>\n                                                        </div>\n                                                }\n                                            }\n                                            )}\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"mission-patch\">\n                                        <div className=\"seperator\">\n                                            <img src={launch.links.patch.small || MissionPatch }\n                                                className=\"patch\"\n                                                alt=\"mission patch\"\n                                            />\n                                        </div>\n                                    </div> */}\n                                </div>\n                                <div className=\"flight--kit\">\n                                    <div className=\"flight--section flight__site__realtime\">\n                                        <p className=\"flight__format flight__site flight--header\">LAUNCH SITE </p>\n                                        <div className=\"flight__site\">\n                                        {launchPad.map((launchP, index) => {\n                                            if(launchP.id === launch.launchpad) {\n                                                return <div key={index} className=\"flight__site\">\n                                                        <span className=\"launch--site next-details\">{launchP.full_name}</span>\n                                                        </div>\n                                                }\n                                            }\n                                        )}\n                                        </div>\n                                    </div>\n                                    <div className=\"mission-links\">\n                                        <ul className=\"mission-navigate-extra\">\n                                            <li><a  href={launch.links.wikipedia} \n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                className=\"mission--details\">\n                                                <img src={wikipediaLink}\n                                                    alt=\"wikipedia\"\n                                                    className=\"link-images\"\n                                                />\n                                            </a></li>\n                                            <li><a  href={launch.links.presskit} \n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                alt=\"presskit\"\n                                                className=\"mission--details\">\n                                                <img src={presskitLink}\n                                                    alt=\"press kit\"\n                                                    className=\"link-images press-images\"\n                                                />\n                                            </a></li>\n                                            <li><a  href={launch.links.reddit.launch} \n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                alt=\"reddit-launch\"\n                                                className=\"mission--details\">\n                                                <img src={redditLink}\n                                                    alt=\"reddit launch\"\n                                                    className=\"link-images\"\n                                                />\n                                            </a></li>\n                                            <li><a  href={launch.links.article} \n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                alt=\"article\"\n                                                className=\"mission--details\">\n                                                <img src={articleLink}\n                                                    alt=\"article\"\n                                                    className=\"link-images\"\n                                                />\n                                            </a></li>\n                                        </ul>\n                                    </div>\n                                </div>\n                                <span className=\"line--format latest--line\"></span>\n                            </div>\n                                <div className=\"mission-container mission-debrief\">\n                                    <p className=\"launch--details launch--format\"> {launch.details} </p>\n                                </div>\n                            <div className=\"mission-container player-wrapper\">\n                                <h3 className=\"upcoming--details latest--header mission--replay\">MISSION REPLAY</h3>\n                                <div className=\"launch-container react-player\">\n                                    <ReactPlayer \n                                        url={launch.links.webcast} \n                                        controls \n                                        width='100vh' \n                                        height='60vh'\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"mission-container\">\n                                <div className=\"gallery-container\">\n                                    {launch.links.flickr.original.map((gallery,index)=>\n                                        <a key={index} href={gallery} target=\"_blank\" rel=\"noopener noreferrer\" className=\"image-link\">\n                                            <img\n                                                src={gallery}\n                                                alt={launch.flight_number}\n                                                className=\"flight-image\"\n                                            />\n                                        </a>\n                                    )}\n                                </div>\n                                <span className=\"underline\"><hr /></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n    }\n}","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\n\nimport '../App.css'\n\nimport falconImage from '../../src/assets/images/falcon9ren.png';\n\n\nexport default function VehicleFalcon9() {\n    const [error, setError] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [rocket, setRocket] = useState([]);\n    const [toggleStatus, setToggleStatus] = useState(0);\n\n    useEffect(() => {\n        fetchSpaceX();\n        async function fetchSpaceX() {\n            try {\n            const url = \"https://api.spacexdata.com/v3/rockets/falcon9\";\n                const response = await fetch(url);\n                const data = await response.json();\n                setRocket(data);\n                setIsLoaded(true);\n            } catch (error) {\n                setIsLoaded(false);\n                setError(error);\n            }\n        }\n    }, []);\n    if(error) {\n        return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n        return <div className=\"loading-progress\"> <CircularProgress color=\"secondary\" /></div>\n        } else {\n            return (\n            <div className=\"background-rocket\">\n                <div className=\"falcon-background background-rocket\">\n                    <div className=\"container-header-title\">\n                        <div className=\"container-inner\">\n                            <h2 className=\"header-inner vehicle--header\">FALCON 9</h2>\n                        </div>\n                    </div>\n                    <div className=\"arrow-down\"></div>\n                </div>\n                <div className=\"background-rocket-bottom\">\n                    <div className=\"rocket-container\">\n                        <div className=\"rocket-containerL\">\n                            <div className=\"rocket-overview\">\n                                <h2 className=\"overview--header\">OVERVIEW</h2>\n                                <div className=\"rocket-overview-format\">\n                                    <p className=\"rocket--text next-details\">{rocket.description}</p>\n                                </div>\n                                <div className=\"shadow-button\">\n                                    <a href={rocket.wikipedia}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            className=\"button-format\">\n                                        <button className=\"read-button hover-filled-opacity\">\n                                            <span>Read More</span>\n                                        </button>\n                                    </a>\n                                </div>\n                            </div>\n                            <div className=\"rocket-containerL-lower\">\n                                <div className=\"rocket-containerL-first_stage\">\n                                    <div className=\"rocket-header\">\n                                        <h3 onClick={() => setToggleStatus(0)} className={toggleStatus ? \" additional-overview\" : \"highlight additional-overview\"}>FIRST STAGE</h3>\n                                            <span className=\"seperator\">|</span>\n                                        <h3 onClick={() => setToggleStatus(1)} className={toggleStatus ? \"highlight additional-overview\" : \"additional-overview\"}>SECOND STAGE</h3>\n                                    </div>\n                                    {toggleStatus === 0 && \n                                    <div className=\"rocket-stages\">\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description rocket--engine\">ENGINES</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.first_stage.engines}</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">THRUST AT <span className=\"rocket--payload\">SEA LEVEL</span></p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{(rocket.first_stage.thrust_sea_level.kN).toLocaleString()}</span> <span>&nbsp;kN</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">THRUST IN <span className=\"rocket--payload\">VACUUM</span></p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{(rocket.first_stage.thrust_vacuum.kN).toLocaleString()}</span> <span>&nbsp;kN</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">BURN TIME</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.first_stage.burn_time_sec} </span> <span>&nbsp;sec</span></p>\n                                        </div>\n                                    </div>}\n                                    {toggleStatus === 1 && \n                                    <div className=\"rocket-stages\">\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">ENGINES</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.second_stage.engines}</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">THRUST</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{(rocket.second_stage.thrust.kN).toLocaleString()}</span> <span>&nbsp;kN</span></p>\n                                        </div>\n                                        <div className=\"overview-table\">\n                                            <p className=\"rocket--description\">BURN TIME</p>\n                                            <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.second_stage.burn_time_sec} </span> <span>&nbsp;sec</span></p>\n                                        </div>\n                                    </div>}\n                                </div>\n                            </div>\n\n                        </div>\n                        <div className=\"rocket-containerM\">\n                            <img src={falconImage}\n                                alt=\"falcon9 rocket\"\n                                className=\"rocket-side-image\">\n                            </img>\n                        </div>\n                        <div className=\"rocket-containerR\">\n                            <div className=\"technical\">\n                                <h3 className='rocket--technical'>TECHNICAL DETAILS</h3>\n                            </div>\n                            <div className=\"overview-container\">\n                                <div className=\"rocket-stages\">\n                                    <div className=\"overview-table-right format-table-right\">\n                                        <p className=\"rocket--description\">HEIGHT</p>\n                                        <p className=\"rocket--classification\"> <span className=\"rocket--classification--met\">{rocket.height.meters}</span>&nbsp;<span>m</span></p>\n                                    </div>\n                                </div>\n                                <div className=\"overview-table-right\">\n                                    <div className=\"overview-table-right\">\n                                        <p className=\"rocket--description\">DIAMETER</p>\n                                        <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.diameter.meters}</span>&nbsp;<span>m</span></p>\n                                    </div>\n                                </div>                      \n                                <div className=\"overview-table-right\">\n                                    <div className=\"overview-table-right\">\n                                        <p className=\"rocket--description\">MASS</p>\n                                        <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{(rocket.mass.kg).toLocaleString()}</span>&nbsp;<span>kg</span></p>\n                                    </div>\n                                </div>\n                                <div className=\"overview-table-payload\">\n                                    <div className=\"overview-table-right\">\n                                    {rocket.payload_weights.map((payload,index)=>\n                                        <div key={payload.id} className=\"overview-table-payload\">\n                                            <ul className=\"overview-table overview-table-right\">\n                                                <span className=\"rocket--description\">PAYLOAD TO <span className=\"rocket--payload rocket--name\"> {payload.id} </span></span>\n                                                <li className=\"rocket--classification\"> <span className=\"rocket--classification--met\">{(payload.kg).toLocaleString()}</span> <span>&nbsp;kg</span></li>\n                                            </ul>\n                                        </div>\n                                    )}\n                                    </div>\n                                </div>\n                                <div className=\"overview-table-right\">\n                                    <div className=\"overview-table-right\">\n                                        <p className=\"rocket--description\">STAGES</p>\n                                        <p className=\"rocket--classification\"><span className=\"rocket--classification--met\">{rocket.stages}</span></p>\n                                    </div>\n                                </div>     \n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"rocket-container\">\n                        <div className=\"next-button-left\">\n                            <div className=\"read-button next-button\">\n                            <Link to={`/rocket/falcon9`}><span>Falcon 9</span></Link>\n                            </div>\n                        </div>\n                        <div className=\"rocket-containerM read-button next-button\">\n                            <Link to={`/rocket/falconheavy`}><span>Falcon Heavy</span></Link>\n                        </div>\n                        <div className=\"next-button-right\">\n                            <div className=\"read-button next-button\">\n                                <Link to={`/rocket/starship`}><span>Starship</span></Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport  {BrowserRouter as Router, Switch, Route, } from 'react-router-dom';\nimport Headroom from 'react-headroom';\n\nimport Navbar from './components/navbar';\nimport LandingPage from './components/landingpage';\nimport LatestLaunch from './components/latestlaunch';\nimport FalconHeavy from './components/vehicle_falconheavy';\nimport Starship from './components/vehicle_starship';\nimport PreviousLaunch from './components/previous';\nimport Launch from './components/launch';\nimport F9 from './components/vehicle_falcon9';\n\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Headroom>\n\t\t\t\t\t< Navbar />\n\t\t\t\t</Headroom>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/missions'>\n\t\t\t\t\t\t< PreviousLaunch />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/rocket/falcon9'>\n\t\t\t\t\t\t< F9 />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/rocket/falconheavy'>\n\t\t\t\t\t\t< FalconHeavy />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/rocket/starship'>\n\t\t\t\t\t\t< Starship />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/launch/:id' component={Launch}></Route>\n\t\t\t\t\t<Route path='/'>\n\t\t\t\t\t\t< LandingPage />\n\t\t\t\t\t\t< LatestLaunch />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}